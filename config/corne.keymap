/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        go_macro {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB       &kp Q  &kp W  &kp E             &kp R      &kp T    &kp Y  &kp U      &kp I            &kp O    &kp P     &kp BSPC
&kp LEFT_GUI  &kp A  &kp S  &kp D             &kp F      &kp G    &kp H  &kp J      &kp K            &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C             &kp V      &kp B    &kp N  &kp M      &kp COMMA        &kp DOT  &kp FSLH  &kp ESC
                            &kp LEFT_CONTROL  &kp SPACE  &mo 1    &mo 2  &kp ENTER  &kp RIGHT_SHIFT
            >;
        };

        Nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        Symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbol";
            bindings = <
&kp TAB    &kp EXCL  &kp AT    &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET      &kp AMPS      &kp KP_MULTIPLY  &kp LPAR      &kp RPAR      &kp BSPC
&kp LCTRL  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5       &kp N6         &kp N7        &kp N8           &kp N9        &kp N0        &kp GRAVE
&kp LALT   &kp BSLH  &kp LBKT  &kp RBKT   &kp EQUAL  &kp MINUS    &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(LBRC)     &kp LS(RBRC)  &kp LS(PIPE)  &kp LS(TILDE)
                               &kp LCTRL  &kp SPACE  &trans       &trans         &kp ENTER     &kp RIGHT_SHIFT
            >;
        };

        macro {
            display-name = "Macro";
            bindings = <
&kp TAB    &kp EXCL  &kp AT    &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET      &kp AMPS      &kp KP_MULTIPLY  &kp LPAR      &kp RPAR      &kp BSPC
&kp LCTRL  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5       &kp N6         &kp N7        &kp N8           &kp N9        &kp N0        &kp GRAVE
&kp LALT   &kp BSLH  &kp LBKT  &kp RBKT   &kp EQUAL  &kp MINUS    &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(LBRC)     &kp LS(RBRC)  &kp LS(PIPE)  &kp LS(TILDE)
                               &kp LCTRL  &kp SPACE  &trans       &trans         &kp ENTER     &kp RIGHT_SHIFT
            >;
        };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
